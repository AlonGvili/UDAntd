{"version":3,"sources":["webpack:///./src/app/page-cycler.jsx"],"names":["PageCycler","state","currentPageIndex","props","pages","length","setState","name","history","push","url","replace","cyclePagesInterval","cyclePages","cyclePage","bind","React","Component","withRouter"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;IAEqBA,U;;;;;AACjB,wBAAc;AAAA;;AAAA;;AACV;AAEA,UAAKC,KAAL,GAAa;AACXC,sBAAgB,EAAE;AADP,KAAb;AAHU;AAMX;;;;gCAES;AAER,UAAIA,gBAAgB,GAAG,KAAKD,KAAL,CAAWC,gBAAX,GAA8B,CAArD;;AACA,UAAI,KAAKD,KAAL,CAAWC,gBAAX,KAAgC,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,GAA0B,CAA9D,EAAiE;AAC7DH,wBAAgB,GAAG,CAAnB;AACH;;AAED,WAAKI,QAAL,CAAc;AACVJ,wBAAgB,EAAEA;AADR,OAAd;;AAIA,UAAI,KAAKC,KAAL,CAAWC,KAAX,CAAiBF,gBAAjB,EAAmCK,IAAnC,IAA2C,IAA/C,EAAqD;AACjD,aAAKJ,KAAL,CAAWK,OAAX,CAAmBC,IAAnB,CAAwB,KAAKN,KAAL,CAAWC,KAAX,CAAiBF,gBAAjB,EAAmCQ,GAA3D;AACH,OAFD,MAGK;AACD,aAAKP,KAAL,CAAWK,OAAX,CAAmBC,IAAnB,CAAwB,MAAM,KAAKN,KAAL,CAAWC,KAAX,CAAiBF,gBAAjB,EAAmCK,IAAnC,CAAwCI,OAAxC,CAAgD,GAAhD,EAAqD,GAArD,CAA9B;AACH;AAGJ;;;6BAEQ;AACL,aAAO,2DAAC,qDAAD;AAAe,eAAO,EAAE,KAAKR,KAAL,CAAWS,kBAAX,GAAgC,IAAxD;AAA8D,eAAO,EAAE,KAAKT,KAAL,CAAWU,UAAlF;AAA8F,gBAAQ,EAAE,KAAKC,SAAL,CAAeC,IAAf,CAAoB,IAApB;AAAxG,QAAP;AACH;;;;EAhCmCC,4CAAK,CAACC,S;;;AAmC9CjB,UAAU,GAAGkB,wEAAU,CAAClB,UAAD,CAAvB,C","file":"ud-page-cycler.5030ea407e74969e6c7d.bundle.js","sourcesContent":["import React from 'react';\r\nimport ReactInterval from 'react-interval';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nexport default class PageCycler extends React.Component {\r\n    constructor() {\r\n        super();\r\n    \r\n        this.state = {\r\n          currentPageIndex: 0\r\n        }\r\n      }\r\n\r\n    cyclePage() {\r\n    \r\n        var currentPageIndex = this.state.currentPageIndex + 1;\r\n        if (this.state.currentPageIndex === this.props.pages.length - 1) {\r\n            currentPageIndex = 0;\r\n        }\r\n    \r\n        this.setState({\r\n            currentPageIndex: currentPageIndex\r\n        });\r\n\r\n        if (this.props.pages[currentPageIndex].name == null) {\r\n            this.props.history.push(this.props.pages[currentPageIndex].url)\r\n        }\r\n        else {\r\n            this.props.history.push(\"/\" + this.props.pages[currentPageIndex].name.replace(\" \", \"-\"))\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    render() {\r\n        return <ReactInterval timeout={this.props.cyclePagesInterval * 1000} enabled={this.props.cyclePages} callback={this.cyclePage.bind(this)}/>\r\n    }\r\n}\r\n\r\nPageCycler = withRouter(PageCycler);\r\n\r\n"],"sourceRoot":""}